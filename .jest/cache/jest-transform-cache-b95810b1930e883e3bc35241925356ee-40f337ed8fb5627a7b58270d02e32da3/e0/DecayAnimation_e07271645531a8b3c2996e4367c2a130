11872de223fa95328a8c0823d263886d
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var Animation = require('./Animation');

var _require = require('../NativeAnimatedHelper'),
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var DecayAnimation = function (_Animation) {
  (0, _inherits2.default)(DecayAnimation, _Animation);

  var _super = _createSuper(DecayAnimation);

  function DecayAnimation(config) {
    var _config$deceleration, _config$isInteraction, _config$iterations;

    var _this;

    (0, _classCallCheck2.default)(this, DecayAnimation);
    _this = _super.call(this);
    _this._deceleration = (_config$deceleration = config.deceleration) != null ? _config$deceleration : 0.998;
    _this._velocity = config.velocity;
    _this._useNativeDriver = shouldUseNativeDriver(config);
    _this._platformConfig = config.platformConfig;
    _this.__isInteraction = (_config$isInteraction = config.isInteraction) != null ? _config$isInteraction : !_this._useNativeDriver;
    _this.__iterations = (_config$iterations = config.iterations) != null ? _config$iterations : 1;
    return _this;
  }

  (0, _createClass2.default)(DecayAnimation, [{
    key: "__getNativeAnimationConfig",
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity,
        iterations: this.__iterations,
        platformConfig: this._platformConfig
      };
    }
  }, {
    key: "start",
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();

      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: "onUpdate",
    value: function onUpdate() {
      var now = Date.now();
      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({
          finished: true
        });

        return;
      }

      this._lastValue = value;

      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(DecayAnimation.prototype), "stop", this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);

      this.__debouncedOnEnd({
        finished: false
      });
    }
  }]);
  return DecayAnimation;
}(Animation);

module.exports = DecayAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbmltYXRpb24iLCJyZXF1aXJlIiwic2hvdWxkVXNlTmF0aXZlRHJpdmVyIiwiRGVjYXlBbmltYXRpb24iLCJjb25maWciLCJfZGVjZWxlcmF0aW9uIiwiZGVjZWxlcmF0aW9uIiwiX3ZlbG9jaXR5IiwidmVsb2NpdHkiLCJfdXNlTmF0aXZlRHJpdmVyIiwiX3BsYXRmb3JtQ29uZmlnIiwicGxhdGZvcm1Db25maWciLCJfX2lzSW50ZXJhY3Rpb24iLCJpc0ludGVyYWN0aW9uIiwiX19pdGVyYXRpb25zIiwiaXRlcmF0aW9ucyIsInR5cGUiLCJmcm9tVmFsdWUiLCJvblVwZGF0ZSIsIm9uRW5kIiwicHJldmlvdXNBbmltYXRpb24iLCJhbmltYXRlZFZhbHVlIiwiX19hY3RpdmUiLCJfbGFzdFZhbHVlIiwiX2Zyb21WYWx1ZSIsIl9vblVwZGF0ZSIsIl9fb25FbmQiLCJfc3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIl9fc3RhcnROYXRpdmVBbmltYXRpb24iLCJfYW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJiaW5kIiwidmFsdWUiLCJNYXRoIiwiZXhwIiwiYWJzIiwiX19kZWJvdW5jZWRPbkVuZCIsImZpbmlzaGVkIiwiZ2xvYmFsIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRGVjYXlBbmltYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBbmltYXRpb24gPSByZXF1aXJlKCcuL0FuaW1hdGlvbicpO1xuXG5jb25zdCB7c2hvdWxkVXNlTmF0aXZlRHJpdmVyfSA9IHJlcXVpcmUoJy4uL05hdGl2ZUFuaW1hdGVkSGVscGVyJyk7XG5cbmltcG9ydCB0eXBlIHtQbGF0Zm9ybUNvbmZpZ30gZnJvbSAnLi4vQW5pbWF0ZWRQbGF0Zm9ybUNvbmZpZyc7XG5pbXBvcnQgdHlwZSBBbmltYXRlZFZhbHVlIGZyb20gJy4uL25vZGVzL0FuaW1hdGVkVmFsdWUnO1xuaW1wb3J0IHR5cGUge0FuaW1hdGlvbkNvbmZpZywgRW5kQ2FsbGJhY2t9IGZyb20gJy4vQW5pbWF0aW9uJztcblxuZXhwb3J0IHR5cGUgRGVjYXlBbmltYXRpb25Db25maWcgPSB7XG4gIC4uLkFuaW1hdGlvbkNvbmZpZyxcbiAgdmVsb2NpdHk6XG4gICAgfCBudW1iZXJcbiAgICB8IHtcbiAgICAgICAgeDogbnVtYmVyLFxuICAgICAgICB5OiBudW1iZXIsXG4gICAgICAgIC4uLlxuICAgICAgfSxcbiAgZGVjZWxlcmF0aW9uPzogbnVtYmVyLFxufTtcblxuZXhwb3J0IHR5cGUgRGVjYXlBbmltYXRpb25Db25maWdTaW5nbGUgPSB7XG4gIC4uLkFuaW1hdGlvbkNvbmZpZyxcbiAgdmVsb2NpdHk6IG51bWJlcixcbiAgZGVjZWxlcmF0aW9uPzogbnVtYmVyLFxufTtcblxuY2xhc3MgRGVjYXlBbmltYXRpb24gZXh0ZW5kcyBBbmltYXRpb24ge1xuICBfc3RhcnRUaW1lOiBudW1iZXI7XG4gIF9sYXN0VmFsdWU6IG51bWJlcjtcbiAgX2Zyb21WYWx1ZTogbnVtYmVyO1xuICBfZGVjZWxlcmF0aW9uOiBudW1iZXI7XG4gIF92ZWxvY2l0eTogbnVtYmVyO1xuICBfb25VcGRhdGU6ICh2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xuICBfYW5pbWF0aW9uRnJhbWU6IGFueTtcbiAgX3VzZU5hdGl2ZURyaXZlcjogYm9vbGVhbjtcbiAgX3BsYXRmb3JtQ29uZmlnOiA/UGxhdGZvcm1Db25maWc7XG5cbiAgY29uc3RydWN0b3IoY29uZmlnOiBEZWNheUFuaW1hdGlvbkNvbmZpZ1NpbmdsZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fZGVjZWxlcmF0aW9uID0gY29uZmlnLmRlY2VsZXJhdGlvbiA/PyAwLjk5ODtcbiAgICB0aGlzLl92ZWxvY2l0eSA9IGNvbmZpZy52ZWxvY2l0eTtcbiAgICB0aGlzLl91c2VOYXRpdmVEcml2ZXIgPSBzaG91bGRVc2VOYXRpdmVEcml2ZXIoY29uZmlnKTtcbiAgICB0aGlzLl9wbGF0Zm9ybUNvbmZpZyA9IGNvbmZpZy5wbGF0Zm9ybUNvbmZpZztcbiAgICB0aGlzLl9faXNJbnRlcmFjdGlvbiA9IGNvbmZpZy5pc0ludGVyYWN0aW9uID8/ICF0aGlzLl91c2VOYXRpdmVEcml2ZXI7XG4gICAgdGhpcy5fX2l0ZXJhdGlvbnMgPSBjb25maWcuaXRlcmF0aW9ucyA/PyAxO1xuICB9XG5cbiAgX19nZXROYXRpdmVBbmltYXRpb25Db25maWcoKToge3xcbiAgICBkZWNlbGVyYXRpb246IG51bWJlcixcbiAgICBpdGVyYXRpb25zOiBudW1iZXIsXG4gICAgcGxhdGZvcm1Db25maWc6ID9QbGF0Zm9ybUNvbmZpZyxcbiAgICB0eXBlOiAkVEVNUE9SQVJZJHN0cmluZzwnZGVjYXknPixcbiAgICB2ZWxvY2l0eTogbnVtYmVyLFxuICB8fSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6ICdkZWNheScsXG4gICAgICBkZWNlbGVyYXRpb246IHRoaXMuX2RlY2VsZXJhdGlvbixcbiAgICAgIHZlbG9jaXR5OiB0aGlzLl92ZWxvY2l0eSxcbiAgICAgIGl0ZXJhdGlvbnM6IHRoaXMuX19pdGVyYXRpb25zLFxuICAgICAgcGxhdGZvcm1Db25maWc6IHRoaXMuX3BsYXRmb3JtQ29uZmlnLFxuICAgIH07XG4gIH1cblxuICBzdGFydChcbiAgICBmcm9tVmFsdWU6IG51bWJlcixcbiAgICBvblVwZGF0ZTogKHZhbHVlOiBudW1iZXIpID0+IHZvaWQsXG4gICAgb25FbmQ6ID9FbmRDYWxsYmFjayxcbiAgICBwcmV2aW91c0FuaW1hdGlvbjogP0FuaW1hdGlvbixcbiAgICBhbmltYXRlZFZhbHVlOiBBbmltYXRlZFZhbHVlLFxuICApOiB2b2lkIHtcbiAgICB0aGlzLl9fYWN0aXZlID0gdHJ1ZTtcbiAgICB0aGlzLl9sYXN0VmFsdWUgPSBmcm9tVmFsdWU7XG4gICAgdGhpcy5fZnJvbVZhbHVlID0gZnJvbVZhbHVlO1xuICAgIHRoaXMuX29uVXBkYXRlID0gb25VcGRhdGU7XG4gICAgdGhpcy5fX29uRW5kID0gb25FbmQ7XG4gICAgdGhpcy5fc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBpZiAodGhpcy5fdXNlTmF0aXZlRHJpdmVyKSB7XG4gICAgICB0aGlzLl9fc3RhcnROYXRpdmVBbmltYXRpb24oYW5pbWF0ZWRWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vICRGbG93Rml4TWVbbWV0aG9kLXVuYmluZGluZ10gYWRkZWQgd2hlbiBpbXByb3ZpbmcgdHlwaW5nIGZvciB0aGlzIHBhcmFtZXRlcnNcbiAgICAgIHRoaXMuX2FuaW1hdGlvbkZyYW1lID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMub25VcGRhdGUuYmluZCh0aGlzKSk7XG4gICAgfVxuICB9XG5cbiAgb25VcGRhdGUoKTogdm9pZCB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcblxuICAgIGNvbnN0IHZhbHVlID1cbiAgICAgIHRoaXMuX2Zyb21WYWx1ZSArXG4gICAgICAodGhpcy5fdmVsb2NpdHkgLyAoMSAtIHRoaXMuX2RlY2VsZXJhdGlvbikpICpcbiAgICAgICAgKDEgLSBNYXRoLmV4cCgtKDEgLSB0aGlzLl9kZWNlbGVyYXRpb24pICogKG5vdyAtIHRoaXMuX3N0YXJ0VGltZSkpKTtcblxuICAgIHRoaXMuX29uVXBkYXRlKHZhbHVlKTtcblxuICAgIGlmIChNYXRoLmFicyh0aGlzLl9sYXN0VmFsdWUgLSB2YWx1ZSkgPCAwLjEpIHtcbiAgICAgIHRoaXMuX19kZWJvdW5jZWRPbkVuZCh7ZmluaXNoZWQ6IHRydWV9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9sYXN0VmFsdWUgPSB2YWx1ZTtcbiAgICBpZiAodGhpcy5fX2FjdGl2ZSkge1xuICAgICAgLy8gJEZsb3dGaXhNZVttZXRob2QtdW5iaW5kaW5nXSBhZGRlZCB3aGVuIGltcHJvdmluZyB0eXBpbmcgZm9yIHRoaXMgcGFyYW1ldGVyc1xuICAgICAgdGhpcy5fYW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5vblVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1cblxuICBzdG9wKCk6IHZvaWQge1xuICAgIHN1cGVyLnN0b3AoKTtcbiAgICB0aGlzLl9fYWN0aXZlID0gZmFsc2U7XG4gICAgZ2xvYmFsLmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuX2FuaW1hdGlvbkZyYW1lKTtcbiAgICB0aGlzLl9fZGVib3VuY2VkT25FbmQoe2ZpbmlzaGVkOiBmYWxzZX0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRGVjYXlBbmltYXRpb247XG4iXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBRUEsZUFBZ0NBLE9BQU8sQ0FBQyx5QkFBRCxDQUF2QztBQUFBLElBQU9DLHFCQUFQLFlBQU9BLHFCQUFQOztJQXdCTUMsYzs7Ozs7RUFXSix3QkFBWUMsTUFBWixFQUFnRDtJQUFBOztJQUFBOztJQUFBO0lBQzlDO0lBQ0EsTUFBS0MsYUFBTCwyQkFBcUJELE1BQU0sQ0FBQ0UsWUFBNUIsbUNBQTRDLEtBQTVDO0lBQ0EsTUFBS0MsU0FBTCxHQUFpQkgsTUFBTSxDQUFDSSxRQUF4QjtJQUNBLE1BQUtDLGdCQUFMLEdBQXdCUCxxQkFBcUIsQ0FBQ0UsTUFBRCxDQUE3QztJQUNBLE1BQUtNLGVBQUwsR0FBdUJOLE1BQU0sQ0FBQ08sY0FBOUI7SUFDQSxNQUFLQyxlQUFMLDRCQUF1QlIsTUFBTSxDQUFDUyxhQUE5QixvQ0FBK0MsQ0FBQyxNQUFLSixnQkFBckQ7SUFDQSxNQUFLSyxZQUFMLHlCQUFvQlYsTUFBTSxDQUFDVyxVQUEzQixpQ0FBeUMsQ0FBekM7SUFQOEM7RUFRL0M7Ozs7V0FFRCxzQ0FNRztNQUNELE9BQU87UUFDTEMsSUFBSSxFQUFFLE9BREQ7UUFFTFYsWUFBWSxFQUFFLEtBQUtELGFBRmQ7UUFHTEcsUUFBUSxFQUFFLEtBQUtELFNBSFY7UUFJTFEsVUFBVSxFQUFFLEtBQUtELFlBSlo7UUFLTEgsY0FBYyxFQUFFLEtBQUtEO01BTGhCLENBQVA7SUFPRDs7O1dBRUQsZUFDRU8sU0FERixFQUVFQyxRQUZGLEVBR0VDLEtBSEYsRUFJRUMsaUJBSkYsRUFLRUMsYUFMRixFQU1RO01BQ04sS0FBS0MsUUFBTCxHQUFnQixJQUFoQjtNQUNBLEtBQUtDLFVBQUwsR0FBa0JOLFNBQWxCO01BQ0EsS0FBS08sVUFBTCxHQUFrQlAsU0FBbEI7TUFDQSxLQUFLUSxTQUFMLEdBQWlCUCxRQUFqQjtNQUNBLEtBQUtRLE9BQUwsR0FBZVAsS0FBZjtNQUNBLEtBQUtRLFVBQUwsR0FBa0JDLElBQUksQ0FBQ0MsR0FBTCxFQUFsQjs7TUFDQSxJQUFJLEtBQUtwQixnQkFBVCxFQUEyQjtRQUN6QixLQUFLcUIsc0JBQUwsQ0FBNEJULGFBQTVCO01BQ0QsQ0FGRCxNQUVPO1FBRUwsS0FBS1UsZUFBTCxHQUF1QkMscUJBQXFCLENBQUMsS0FBS2QsUUFBTCxDQUFjZSxJQUFkLENBQW1CLElBQW5CLENBQUQsQ0FBNUM7TUFDRDtJQUNGOzs7V0FFRCxvQkFBaUI7TUFDZixJQUFNSixHQUFHLEdBQUdELElBQUksQ0FBQ0MsR0FBTCxFQUFaO01BRUEsSUFBTUssS0FBSyxHQUNULEtBQUtWLFVBQUwsR0FDQyxLQUFLakIsU0FBTCxJQUFrQixJQUFJLEtBQUtGLGFBQTNCLENBQUQsSUFDRyxJQUFJOEIsSUFBSSxDQUFDQyxHQUFMLENBQVMsRUFBRSxJQUFJLEtBQUsvQixhQUFYLEtBQTZCd0IsR0FBRyxHQUFHLEtBQUtGLFVBQXhDLENBQVQsQ0FEUCxDQUZGOztNQUtBLEtBQUtGLFNBQUwsQ0FBZVMsS0FBZjs7TUFFQSxJQUFJQyxJQUFJLENBQUNFLEdBQUwsQ0FBUyxLQUFLZCxVQUFMLEdBQWtCVyxLQUEzQixJQUFvQyxHQUF4QyxFQUE2QztRQUMzQyxLQUFLSSxnQkFBTCxDQUFzQjtVQUFDQyxRQUFRLEVBQUU7UUFBWCxDQUF0Qjs7UUFDQTtNQUNEOztNQUVELEtBQUtoQixVQUFMLEdBQWtCVyxLQUFsQjs7TUFDQSxJQUFJLEtBQUtaLFFBQVQsRUFBbUI7UUFFakIsS0FBS1MsZUFBTCxHQUF1QkMscUJBQXFCLENBQUMsS0FBS2QsUUFBTCxDQUFjZSxJQUFkLENBQW1CLElBQW5CLENBQUQsQ0FBNUM7TUFDRDtJQUNGOzs7V0FFRCxnQkFBYTtNQUNYO01BQ0EsS0FBS1gsUUFBTCxHQUFnQixLQUFoQjtNQUNBa0IsTUFBTSxDQUFDQyxvQkFBUCxDQUE0QixLQUFLVixlQUFqQzs7TUFDQSxLQUFLTyxnQkFBTCxDQUFzQjtRQUFDQyxRQUFRLEVBQUU7TUFBWCxDQUF0QjtJQUNEOzs7RUFyRjBCdkMsUzs7QUF3RjdCMEMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCeEMsY0FBakIifQ==