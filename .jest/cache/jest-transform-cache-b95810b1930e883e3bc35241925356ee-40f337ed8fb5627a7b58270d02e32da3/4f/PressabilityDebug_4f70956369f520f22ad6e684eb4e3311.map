{"version":3,"names":["PressabilityDebugView","color","hitSlop","__DEV__","isEnabled","normalizedColor","normalizeColor","baseColor","toString","padStart","backgroundColor","slice","borderColor","borderStyle","borderWidth","bottom","left","position","right","top","isDebugEnabled","setEnabled","value"],"sources":["PressabilityDebug.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport normalizeColor from '../StyleSheet/normalizeColor';\nimport type {ColorValue} from '../StyleSheet/StyleSheet';\n\nimport View from '../Components/View/View';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  color: ColorValue,\n  hitSlop: ?$ReadOnly<{|\n    bottom?: ?number,\n    left?: ?number,\n    right?: ?number,\n    top?: ?number,\n  |}>,\n|}>;\n\n/**\n * Displays a debug overlay to visualize press targets when enabled via the\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\n * for example:\n *\n *   return (\n *     <View>\n *       {children}\n *       {__DEV__ ? (\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\n *       ) : null}\n *     </View>\n *   );\n *\n */\nexport function PressabilityDebugView({color, hitSlop}: Props): React.Node {\n  if (__DEV__) {\n    if (isEnabled()) {\n      const normalizedColor = normalizeColor(color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      const baseColor =\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\n\n      return (\n        <View\n          pointerEvents=\"none\"\n          style={\n            // eslint-disable-next-line react-native/no-inline-styles\n            {\n              backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\n              borderColor: baseColor.slice(0, -2) + '55', // 85%\n              borderStyle: 'dashed',\n              borderWidth: 1,\n              bottom: -(hitSlop?.bottom ?? 0),\n              left: -(hitSlop?.left ?? 0),\n              position: 'absolute',\n              right: -(hitSlop?.right ?? 0),\n              top: -(hitSlop?.top ?? 0),\n            }\n          }\n        />\n      );\n    }\n  }\n  return null;\n}\n\nlet isDebugEnabled = false;\n\nexport function isEnabled(): boolean {\n  if (__DEV__) {\n    return isDebugEnabled;\n  }\n  return false;\n}\n\nexport function setEnabled(value: boolean): void {\n  if (__DEV__) {\n    isDebugEnabled = value;\n  }\n}\n"],"mappings":";;;;;;;;;AAUA;;AAGA;;AACA;;;;;;AA2BO,SAASA,qBAAT,OAAoE;EAAA,IAApCC,KAAoC,QAApCA,KAAoC;EAAA,IAA7BC,OAA6B,QAA7BA,OAA6B;;EACzE,IAAIC,OAAJ,EAAa;IACX,IAAIC,SAAS,EAAb,EAAiB;MAAA;;MACf,IAAMC,eAAe,GAAG,IAAAC,uBAAA,EAAeL,KAAf,CAAxB;;MACA,IAAI,OAAOI,eAAP,KAA2B,QAA/B,EAAyC;QACvC,OAAO,IAAP;MACD;;MACD,IAAME,SAAS,GACb,MAAM,CAACF,eAAD,WAACA,eAAD,GAAoB,CAApB,EAAuBG,QAAvB,CAAgC,EAAhC,EAAoCC,QAApC,CAA6C,CAA7C,EAAgD,GAAhD,CADR;MAGA,OACE,oBAAC,aAAD;QACE,aAAa,EAAC,MADhB;QAEE,KAAK,EAEH;UACEC,eAAe,EAAEH,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,IAAyB,IAD5C;UAEEC,WAAW,EAAEL,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,IAAyB,IAFxC;UAGEE,WAAW,EAAE,QAHf;UAIEC,WAAW,EAAE,CAJf;UAKEC,MAAM,EAAE,qBAAEb,OAAF,oBAAEA,OAAO,CAAEa,MAAX,8BAAqB,CAArB,CALV;UAMEC,IAAI,EAAE,mBAAEd,OAAF,oBAAEA,OAAO,CAAEc,IAAX,4BAAmB,CAAnB,CANR;UAOEC,QAAQ,EAAE,UAPZ;UAQEC,KAAK,EAAE,oBAAEhB,OAAF,oBAAEA,OAAO,CAAEgB,KAAX,6BAAoB,CAApB,CART;UASEC,GAAG,EAAE,kBAAEjB,OAAF,oBAAEA,OAAO,CAAEiB,GAAX,2BAAkB,CAAlB;QATP;MAJJ,EADF;IAmBD;EACF;;EACD,OAAO,IAAP;AACD;;AAED,IAAIC,cAAc,GAAG,KAArB;;AAEO,SAAShB,SAAT,GAA8B;EACnC,IAAID,OAAJ,EAAa;IACX,OAAOiB,cAAP;EACD;;EACD,OAAO,KAAP;AACD;;AAEM,SAASC,UAAT,CAAoBC,KAApB,EAA0C;EAC/C,IAAInB,OAAJ,EAAa;IACXiB,cAAc,GAAGE,KAAjB;EACD;AACF"}