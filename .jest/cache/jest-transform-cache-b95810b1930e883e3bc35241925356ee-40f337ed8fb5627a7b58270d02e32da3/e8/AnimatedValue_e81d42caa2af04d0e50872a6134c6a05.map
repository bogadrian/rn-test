{"version":3,"names":["AnimatedInterpolation","require","AnimatedWithChildren","InteractionManager","NativeAnimatedHelper","NativeAnimatedAPI","API","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","_executeAsAnimatedBatch","id","operation","setWaitingForIdentifier","unsetWaitingForIdentifier","AnimatedValue","value","Error","_startingValue","_value","_offset","_animation","__isNative","getValue","__getNativeTag","stopAnimation","stop","_updateValue","toString","setAnimatedNodeValue","offset","setAnimatedNodeOffset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","callback","stopTracking","__getValue","config","animation","handle","__isInteraction","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","__detach","tracking","flush","undefined","type","module","exports"],"sources":["AnimatedValue.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\nconst InteractionManager = require('../../Interaction/InteractionManager');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nimport type AnimatedNode from './AnimatedNode';\nimport type Animation, {EndCallback} from '../animations/Animation';\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\nimport type AnimatedTracking from './AnimatedTracking';\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nfunction _flush(rootNode: AnimatedValue): void {\n  const animatedStyles = new Set();\n  function findAnimatedStyles(node: AnimatedValue | AnimatedNode) {\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the error\n     * delete this comment and run Flow. */\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  // $FlowFixMe[prop-missing]\n  animatedStyles.forEach(animatedStyle => animatedStyle.update());\n}\n\n/**\n * Some operations are executed only on batch end, which is _mostly_ scheduled when\n * Animated component props change. For some of the changes which require immediate execution\n * (e.g. setValue), we create a separate batch in case none is scheduled.\n */\nfunction _executeAsAnimatedBatch(id: string, operation: () => void) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\n\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue\n */\nclass AnimatedValue extends AnimatedWithChildren {\n  _value: number;\n  _startingValue: number;\n  _offset: number;\n  _animation: ?Animation;\n  _tracking: ?AnimatedTracking;\n\n  constructor(value: number) {\n    super();\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n  }\n\n  __detach() {\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value - this._offset;\n      });\n    }\n    this.stopAnimation();\n    super.__detach();\n  }\n\n  __getValue(): number {\n    return this._value + this._offset;\n  }\n\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setvalue\n   */\n  setValue(value: number): void {\n    if (this._animation) {\n      this._animation.stop();\n      this._animation = null;\n    }\n    this._updateValue(\n      value,\n      !this.__isNative /* don't perform a flush for natively driven values */,\n    );\n    if (this.__isNative) {\n      _executeAsAnimatedBatch(this.__getNativeTag().toString(), () => {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n      });\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setoffset\n   */\n  setOffset(offset: number): void {\n    this._offset = offset;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n   */\n  flattenOffset(): void {\n    this._value += this._offset;\n    this._offset = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#extractoffset\n   */\n  extractOffset(): void {\n    this._offset += this._value;\n    this._value = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#stopanimation\n   */\n  stopAnimation(callback?: ?(value: number) => void): void {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    if (callback) {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n      } else {\n        callback(this.__getValue());\n      }\n    }\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#resetanimation\n   */\n  resetAnimation(callback?: ?(value: number) => void): void {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(\n        this.__getNativeTag(),\n        this._startingValue,\n      );\n    }\n  }\n\n  _onAnimatedValueUpdateReceived(value: number): void {\n    this._updateValue(value, false /*flush*/);\n  }\n\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#animate\n   */\n  animate(animation: Animation, callback: ?EndCallback): void {\n    let handle = null;\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n    const previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(\n      this._value,\n      value => {\n        // Natively driven animations will never call into that callback, therefore we can always\n        // pass flush = true to allow the updated value to propagate to native with setNativeProps\n        this._updateValue(value, true /* flush */);\n      },\n      result => {\n        this._animation = null;\n        if (handle !== null) {\n          InteractionManager.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      },\n      previousAnimation,\n      this,\n    );\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  stopTracking(): void {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  track(tracking: AnimatedTracking): void {\n    this.stopTracking();\n    this._tracking = tracking;\n    // Make sure that the tracking animation starts executing\n    this._tracking && this._tracking.update();\n  }\n\n  _updateValue(value: number, flush: boolean): void {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n    if (flush) {\n      _flush(this);\n    }\n    super.__callListeners(this.__getValue());\n  }\n\n  __getNativeConfig(): Object {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset,\n    };\n  }\n}\n\nmodule.exports = AnimatedValue;\n"],"mappings":"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"}