{"version":3,"names":["invariant","require","TRACE_TAG_REACT_APPS","TRACE_TAG_JS_VM_CALLS","_enabled","_asyncCookie","_markStack","_markStackIndex","_canInstallReactHook","REACT_MARKER","userTimingPolyfill","__DEV__","mark","markName","systraceLabel","indexOfId","lastIndexOf","cutoffIndex","length","slice","Systrace","beginEvent","measure","measureName","startMark","endMark","topMark","endEvent","clearMarks","clearMeasures","installPerformanceHooks","polyfill","global","performance","undefined","Object","keys","forEach","methodName","installReactHook","setEnabled","enabled","nativeTraceBeginLegacy","nativeTraceEndLegacy","isEnabled","profileName","args","profileNameString","nativeTraceBeginSection","nativeTraceEndSection","beginAsyncEvent","cookie","nativeTraceBeginAsyncSection","endAsyncEvent","nativeTraceEndAsyncSection","counterEvent","value","nativeTraceCounter","__METRO_GLOBAL_PREFIX__","module","exports"],"sources":["Systrace.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst TRACE_TAG_REACT_APPS = 1 << 17; // eslint-disable-line no-bitwise\nconst TRACE_TAG_JS_VM_CALLS = 1 << 27; // eslint-disable-line no-bitwise\n\nlet _enabled = false;\nlet _asyncCookie = 0;\nconst _markStack = [];\nlet _markStackIndex = -1;\nlet _canInstallReactHook = false;\n\n// Implements a subset of User Timing API necessary for React measurements.\n// https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\nconst REACT_MARKER = '\\u269B';\nconst userTimingPolyfill = __DEV__\n  ? {\n      mark(markName: string) {\n        if (_enabled) {\n          _markStackIndex++;\n          _markStack[_markStackIndex] = markName;\n          let systraceLabel = markName;\n          // Since perf measurements are a shared namespace in User Timing API,\n          // we prefix all React results with a React emoji.\n          if (markName[0] === REACT_MARKER) {\n            // This is coming from React.\n            // Removing component IDs keeps trace colors stable.\n            const indexOfId = markName.lastIndexOf(' (#');\n            const cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\n            // Also cut off the emoji because it breaks Systrace\n            systraceLabel = markName.slice(2, cutoffIndex);\n          }\n          Systrace.beginEvent(systraceLabel);\n        }\n      },\n      measure(measureName: string, startMark: ?string, endMark: ?string) {\n        if (_enabled) {\n          invariant(\n            typeof measureName === 'string' &&\n              typeof startMark === 'string' &&\n              typeof endMark === 'undefined',\n            'Only performance.measure(string, string) overload is supported.',\n          );\n          const topMark = _markStack[_markStackIndex];\n          invariant(\n            startMark === topMark,\n            'There was a mismatching performance.measure() call. ' +\n              'Expected \"%s\" but got \"%s.\"',\n            topMark,\n            startMark,\n          );\n          _markStackIndex--;\n          // We can't use more descriptive measureName because Systrace doesn't\n          // let us edit labels post factum.\n          Systrace.endEvent();\n        }\n      },\n      clearMarks(markName: string) {\n        if (_enabled) {\n          if (_markStackIndex === -1) {\n            return;\n          }\n          if (markName === _markStack[_markStackIndex]) {\n            // React uses this for \"cancelling\" started measurements.\n            // Systrace doesn't support deleting measurements, so we just stop them.\n            if (userTimingPolyfill != null) {\n              userTimingPolyfill.measure(markName, markName);\n            }\n          }\n        }\n      },\n      clearMeasures() {\n        // React calls this to avoid memory leaks in browsers, but we don't keep\n        // measurements anyway.\n      },\n    }\n  : null;\n\nfunction installPerformanceHooks(\n  polyfill: null | $TEMPORARY$object<{\n    clearMarks(markName: string): void,\n    clearMeasures(): void,\n    mark(markName: string): void,\n    measure(measureName: string, startMark: ?string, endMark: ?string): void,\n  }>,\n) {\n  if (polyfill) {\n    if (global.performance === undefined) {\n      global.performance = {};\n    }\n\n    Object.keys(polyfill).forEach(methodName => {\n      if (typeof global.performance[methodName] !== 'function') {\n        global.performance[methodName] = polyfill[methodName];\n      }\n    });\n  }\n}\n\nconst Systrace = {\n  installReactHook() {\n    if (_enabled) {\n      if (__DEV__) {\n        installPerformanceHooks(userTimingPolyfill);\n      }\n    }\n    _canInstallReactHook = true;\n  },\n\n  setEnabled(enabled: boolean) {\n    if (_enabled !== enabled) {\n      if (__DEV__) {\n        if (enabled) {\n          global.nativeTraceBeginLegacy &&\n            global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\n        } else {\n          global.nativeTraceEndLegacy &&\n            global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\n        }\n        if (_canInstallReactHook) {\n          if (enabled) {\n            installPerformanceHooks(userTimingPolyfill);\n          }\n        }\n      }\n      _enabled = enabled;\n    }\n  },\n\n  isEnabled(): boolean {\n    return _enabled;\n  },\n\n  /**\n   * beginEvent/endEvent for starting and then ending a profile within the same call stack frame\n   **/\n  beginEvent(\n    profileName?: string | (() => string),\n    args?: {[string]: string, ...},\n  ) {\n    if (_enabled) {\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginSection(\n        TRACE_TAG_REACT_APPS,\n        profileNameString,\n        args,\n      );\n    }\n  },\n\n  endEvent() {\n    if (_enabled) {\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\n    }\n  },\n\n  /**\n   * beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either\n   * occur on another thread or out of the current stack frame, eg await\n   * the returned cookie variable should be used as input into the endAsyncEvent call to end the profile\n   **/\n  beginAsyncEvent(profileName?: string | (() => string)): number {\n    const cookie = _asyncCookie;\n    if (_enabled) {\n      _asyncCookie++;\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginAsyncSection(\n        TRACE_TAG_REACT_APPS,\n        profileNameString,\n        cookie,\n      );\n    }\n    return cookie;\n  },\n\n  endAsyncEvent(profileName?: string | (() => string), cookie?: number) {\n    if (_enabled) {\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceEndAsyncSection(\n        TRACE_TAG_REACT_APPS,\n        profileNameString,\n        cookie,\n      );\n    }\n  },\n\n  /**\n   * counterEvent registers the value to the profileName on the systrace timeline\n   **/\n  counterEvent(profileName?: string | (() => string), value?: number) {\n    if (_enabled) {\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceCounter &&\n        global.nativeTraceCounter(\n          TRACE_TAG_REACT_APPS,\n          profileNameString,\n          value,\n        );\n    }\n  },\n};\n\nif (__DEV__) {\n  // The metro require polyfill can not have dependencies (true for all polyfills).\n  // Ensure that `Systrace` is available in polyfill by exposing it globally.\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__SYSTRACE'] = Systrace;\n}\n\nmodule.exports = Systrace;\n"],"mappings":"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"}