{"version":3,"names":["Object","defineProperty","exports","value","default","runTest","_chalk","data","_interopRequireDefault","require","fs","_interopRequireWildcard","_sourceMapSupport","_console","_transform","docblock","_jestLeakDetector","_jestMessageUtil","_jestResolve","_jestUtil","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","freezeConsole","testConsole","config","_log","fakeConsolePush","_type","message","error","ErrorWithStack","red","bold","formattedError","formatExecError","noStackTrace","undefined","process","stderr","write","exitCode","runTestInternal","path","globalConfig","projectConfig","resolver","context","sendMessageToJest","testSource","readFileSync","docblockPragmas","parse","extract","customEnvironment","testEnvironment","Array","isArray","Error","join","resolveTestEnvironment","requireResolveFunction","resolve","cacheFS","Map","createScriptTransformer","transformer","requireAndTranspileModule","TestEnvironment","env","JEST_JASMINE","testRunner","testFramework","Runtime","interopRequireDefault","runtime","consoleOut","useStderr","stdout","consoleFormatter","type","getConsoleOutput","BufferedConsole","silent","NullConsole","verbose","CustomConsole","docblockEnvironmentOptions","extraTestEnvironmentOptions","JSON","environment","testEnvironmentOptions","console","testPath","getVmContext","exit","leakDetector","detectLeaks","setGlobal","global","changedFiles","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageProvider","sourcesRelatedToTestsInChangedFiles","start","Date","now","setupFiles","esm","unstable_shouldLoadAsEsm","unstable_importModule","setupFile","requireModule","sourcemapOptions","handleUncaughtExceptions","retrieveSourceMap","source","_runtime$getSourceMap","sourceMapSource","getSourceMaps","map","url","requireInternalModule","install","realExit","args","collectV8Coverage","setup","result","stack","stopCollectingV8Coverage","testCount","numPassingTests","numFailingTests","numPendingTests","numTodoTests","end","testRuntime","perfStats","slow","slowTestThreshold","testFilePath","getBuffer","skipped","displayName","coverage","getAllCoverageInfoCopy","coverageKeys","keys","length","v8Coverage","getAllV8CoverageInfoCopy","logHeapUsage","_globalThis$gc","globalThis","gc","memoryUsage","heapUsed","Promise","setImmediate","teardown","resetRetrieveHandlers","setTimeout","isLeaking","leaks"],"sources":["runTest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = runTest;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMapSupport() {\n  const data = _interopRequireDefault(require('source-map-support'));\n\n  _sourceMapSupport = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('@jest/console');\n\n  _console = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction docblock() {\n  const data = _interopRequireWildcard(require('jest-docblock'));\n\n  docblock = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestLeakDetector() {\n  const data = _interopRequireDefault(require('jest-leak-detector'));\n\n  _jestLeakDetector = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestResolve() {\n  const data = require('jest-resolve');\n\n  _jestResolve = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction freezeConsole(testConsole, config) {\n  // @ts-expect-error: `_log` is `private` - we should figure out some proper API here\n  testConsole._log = function fakeConsolePush(_type, message) {\n    const error = new (_jestUtil().ErrorWithStack)(\n      `${_chalk().default.red(\n        `${_chalk().default.bold(\n          'Cannot log after tests are done.'\n        )} Did you forget to wait for something async in your test?`\n      )}\\nAttempted to log \"${message}\".`,\n      fakeConsolePush\n    );\n    const formattedError = (0, _jestMessageUtil().formatExecError)(\n      error,\n      config,\n      {\n        noStackTrace: false\n      },\n      undefined,\n      true\n    );\n    process.stderr.write(`\\n${formattedError}\\n`);\n    process.exitCode = 1;\n  };\n} // Keeping the core of \"runTest\" as a separate function (as \"runTestInternal\")\n// is key to be able to detect memory leaks. Since all variables are local to\n// the function, when \"runTestInternal\" finishes its execution, they can all be\n// freed, UNLESS something else is leaking them (and that's why we can detect\n// the leak!).\n//\n// If we had all the code in a single function, we should manually nullify all\n// references to verify if there is a leak, which is not maintainable and error\n// prone. That's why \"runTestInternal\" CANNOT be inlined inside \"runTest\".\n\nasync function runTestInternal(\n  path,\n  globalConfig,\n  projectConfig,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const testSource = fs().readFileSync(path, 'utf8');\n  const docblockPragmas = docblock().parse(docblock().extract(testSource));\n  const customEnvironment = docblockPragmas['jest-environment'];\n  let testEnvironment = projectConfig.testEnvironment;\n\n  if (customEnvironment) {\n    if (Array.isArray(customEnvironment)) {\n      throw new Error(\n        `You can only define a single test environment through docblocks, got \"${customEnvironment.join(\n          ', '\n        )}\"`\n      );\n    }\n\n    testEnvironment = (0, _jestResolve().resolveTestEnvironment)({\n      ...projectConfig,\n      requireResolveFunction: require.resolve,\n      testEnvironment: customEnvironment\n    });\n  }\n\n  const cacheFS = new Map([[path, testSource]]);\n  const transformer = await (0, _transform().createScriptTransformer)(\n    projectConfig,\n    cacheFS\n  );\n  const TestEnvironment = await transformer.requireAndTranspileModule(\n    testEnvironment\n  );\n  const testFramework = await transformer.requireAndTranspileModule(\n    process.env.JEST_JASMINE === '1'\n      ? require.resolve('jest-jasmine2')\n      : projectConfig.testRunner\n  );\n  const Runtime = (0, _jestUtil().interopRequireDefault)(\n    projectConfig.runtime\n      ? require(projectConfig.runtime)\n      : require('jest-runtime')\n  ).default;\n  const consoleOut = globalConfig.useStderr ? process.stderr : process.stdout;\n\n  const consoleFormatter = (type, message) =>\n    (0, _console().getConsoleOutput)(\n      // 4 = the console call is buried 4 stack frames deep\n      _console().BufferedConsole.write([], type, message, 4),\n      projectConfig,\n      globalConfig\n    );\n\n  let testConsole;\n\n  if (globalConfig.silent) {\n    testConsole = new (_console().NullConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else if (globalConfig.verbose) {\n    testConsole = new (_console().CustomConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else {\n    testConsole = new (_console().BufferedConsole)();\n  }\n\n  let extraTestEnvironmentOptions;\n  const docblockEnvironmentOptions =\n    docblockPragmas['jest-environment-options'];\n\n  if (typeof docblockEnvironmentOptions === 'string') {\n    extraTestEnvironmentOptions = JSON.parse(docblockEnvironmentOptions);\n  }\n\n  const environment = new TestEnvironment(\n    {\n      globalConfig,\n      projectConfig: extraTestEnvironmentOptions\n        ? {\n            ...projectConfig,\n            testEnvironmentOptions: {\n              ...projectConfig.testEnvironmentOptions,\n              ...extraTestEnvironmentOptions\n            }\n          }\n        : projectConfig\n    },\n    {\n      console: testConsole,\n      docblockPragmas,\n      testPath: path\n    }\n  );\n\n  if (typeof environment.getVmContext !== 'function') {\n    console.error(\n      `Test environment found at \"${testEnvironment}\" does not export a \"getVmContext\" method, which is mandatory from Jest 27. This method is a replacement for \"runScript\".`\n    );\n    process.exit(1);\n  }\n\n  const leakDetector = projectConfig.detectLeaks\n    ? new (_jestLeakDetector().default)(environment)\n    : null;\n  (0, _jestUtil().setGlobal)(environment.global, 'console', testConsole);\n  const runtime = new Runtime(\n    projectConfig,\n    environment,\n    resolver,\n    transformer,\n    cacheFS,\n    {\n      changedFiles: context.changedFiles,\n      collectCoverage: globalConfig.collectCoverage,\n      collectCoverageFrom: globalConfig.collectCoverageFrom,\n      collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom,\n      coverageProvider: globalConfig.coverageProvider,\n      sourcesRelatedToTestsInChangedFiles:\n        context.sourcesRelatedToTestsInChangedFiles\n    },\n    path\n  );\n  const start = Date.now();\n\n  for (const path of projectConfig.setupFiles) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      const setupFile = runtime.requireModule(path);\n\n      if (typeof setupFile === 'function') {\n        await setupFile();\n      }\n    }\n  }\n\n  const sourcemapOptions = {\n    environment: 'node',\n    handleUncaughtExceptions: false,\n    retrieveSourceMap: source => {\n      var _runtime$getSourceMap;\n\n      const sourceMapSource =\n        (_runtime$getSourceMap = runtime.getSourceMaps()) === null ||\n        _runtime$getSourceMap === void 0\n          ? void 0\n          : _runtime$getSourceMap.get(source);\n\n      if (sourceMapSource) {\n        try {\n          return {\n            map: JSON.parse(fs().readFileSync(sourceMapSource, 'utf8')),\n            url: source\n          };\n        } catch {}\n      }\n\n      return null;\n    }\n  }; // For tests\n\n  runtime\n    .requireInternalModule(require.resolve('source-map-support'))\n    .install(sourcemapOptions); // For runtime errors\n\n  _sourceMapSupport().default.install(sourcemapOptions);\n\n  if (\n    environment.global &&\n    environment.global.process &&\n    environment.global.process.exit\n  ) {\n    const realExit = environment.global.process.exit;\n\n    environment.global.process.exit = function exit(...args) {\n      const error = new (_jestUtil().ErrorWithStack)(\n        `process.exit called with \"${args.join(', ')}\"`,\n        exit\n      );\n      const formattedError = (0, _jestMessageUtil().formatExecError)(\n        error,\n        projectConfig,\n        {\n          noStackTrace: false\n        },\n        undefined,\n        true\n      );\n      process.stderr.write(formattedError);\n      return realExit(...args);\n    };\n  } // if we don't have `getVmContext` on the env skip coverage\n\n  const collectV8Coverage =\n    globalConfig.coverageProvider === 'v8' &&\n    typeof environment.getVmContext === 'function';\n\n  try {\n    await environment.setup();\n    let result;\n\n    try {\n      if (collectV8Coverage) {\n        await runtime.collectV8Coverage();\n      }\n\n      result = await testFramework(\n        globalConfig,\n        projectConfig,\n        environment,\n        runtime,\n        path,\n        sendMessageToJest\n      );\n    } catch (err) {\n      // Access stack before uninstalling sourcemaps\n      err.stack;\n      throw err;\n    } finally {\n      if (collectV8Coverage) {\n        await runtime.stopCollectingV8Coverage();\n      }\n    }\n\n    freezeConsole(testConsole, projectConfig);\n    const testCount =\n      result.numPassingTests +\n      result.numFailingTests +\n      result.numPendingTests +\n      result.numTodoTests;\n    const end = Date.now();\n    const testRuntime = end - start;\n    result.perfStats = {\n      end,\n      runtime: testRuntime,\n      slow: testRuntime / 1000 > projectConfig.slowTestThreshold,\n      start\n    };\n    result.testFilePath = path;\n    result.console = testConsole.getBuffer();\n    result.skipped = testCount === result.numPendingTests;\n    result.displayName = projectConfig.displayName;\n    const coverage = runtime.getAllCoverageInfoCopy();\n\n    if (coverage) {\n      const coverageKeys = Object.keys(coverage);\n\n      if (coverageKeys.length) {\n        result.coverage = coverage;\n      }\n    }\n\n    if (collectV8Coverage) {\n      const v8Coverage = runtime.getAllV8CoverageInfoCopy();\n\n      if (v8Coverage && v8Coverage.length > 0) {\n        result.v8Coverage = v8Coverage;\n      }\n    }\n\n    if (globalConfig.logHeapUsage) {\n      var _globalThis$gc;\n\n      // @ts-expect-error\n      (_globalThis$gc = globalThis.gc) === null || _globalThis$gc === void 0\n        ? void 0\n        : _globalThis$gc.call(globalThis);\n      result.memoryUsage = process.memoryUsage().heapUsed;\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector,\n          result\n        })\n      );\n    });\n  } finally {\n    runtime.teardown();\n    await environment.teardown();\n\n    _sourceMapSupport().default.resetRetrieveHandlers();\n  }\n}\n\nasync function runTest(\n  path,\n  globalConfig,\n  config,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const {leakDetector, result} = await runTestInternal(\n    path,\n    globalConfig,\n    config,\n    resolver,\n    context,\n    sendMessageToJest\n  );\n\n  if (leakDetector) {\n    // We wanna allow a tiny but time to pass to allow last-minute cleanup\n    await new Promise(resolve => setTimeout(resolve, 100)); // Resolve leak detector, outside the \"runTestInternal\" closure.\n\n    result.leaks = await leakDetector.isLeaking();\n  } else {\n    result.leaks = false;\n  }\n\n  return result;\n}\n"],"mappings":"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"}