{"version":3,"names":["require","AnimatedEvent","attachNativeEvent","AnimatedImplementation","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","createAnimatedComponent","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","forEach","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","iterations","module","exports","Value","ValueXY","Color","AnimatedColor","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');\nconst AnimatedImplementation = require('./AnimatedImplementation');\nconst AnimatedInterpolation = require('./nodes/AnimatedInterpolation');\nconst AnimatedNode = require('./nodes/AnimatedNode');\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst AnimatedValueXY = require('./nodes/AnimatedValueXY');\n\nconst createAnimatedComponent = require('./createAnimatedComponent');\n\nimport type {EndCallback} from './animations/Animation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\n\nimport AnimatedColor from './nodes/AnimatedColor';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nmodule.exports = {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"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"}