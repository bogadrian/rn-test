10687d8075b66a64e25bb65819f2be2e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _processColor = _interopRequireDefault(require("../../StyleSheet/processColor"));

var _processTransform = _interopRequireDefault(require("../../StyleSheet/processTransform"));

var _sizesDiffer = _interopRequireDefault(require("../../Utilities/differ/sizesDiffer"));

var colorAttributes = {
  process: _processColor.default
};
var ReactNativeStyleAttributes = {
  alignContent: true,
  alignItems: true,
  alignSelf: true,
  aspectRatio: true,
  borderBottomWidth: true,
  borderEndWidth: true,
  borderLeftWidth: true,
  borderRightWidth: true,
  borderStartWidth: true,
  borderTopWidth: true,
  borderWidth: true,
  bottom: true,
  direction: true,
  display: true,
  end: true,
  flex: true,
  flexBasis: true,
  flexDirection: true,
  flexGrow: true,
  flexShrink: true,
  flexWrap: true,
  height: true,
  justifyContent: true,
  left: true,
  margin: true,
  marginBottom: true,
  marginEnd: true,
  marginHorizontal: true,
  marginLeft: true,
  marginRight: true,
  marginStart: true,
  marginTop: true,
  marginVertical: true,
  maxHeight: true,
  maxWidth: true,
  minHeight: true,
  minWidth: true,
  overflow: true,
  padding: true,
  paddingBottom: true,
  paddingEnd: true,
  paddingHorizontal: true,
  paddingLeft: true,
  paddingRight: true,
  paddingStart: true,
  paddingTop: true,
  paddingVertical: true,
  position: true,
  right: true,
  start: true,
  top: true,
  width: true,
  zIndex: true,
  elevation: true,
  shadowColor: colorAttributes,
  shadowOffset: {
    diff: _sizesDiffer.default
  },
  shadowOpacity: true,
  shadowRadius: true,
  decomposedMatrix: true,
  rotation: true,
  scaleX: true,
  scaleY: true,
  transform: {
    process: _processTransform.default
  },
  transformMatrix: true,
  translateX: true,
  translateY: true,
  backfaceVisibility: true,
  backgroundColor: colorAttributes,
  borderBottomColor: colorAttributes,
  borderBottomEndRadius: true,
  borderBottomLeftRadius: true,
  borderBottomRightRadius: true,
  borderBottomStartRadius: true,
  borderColor: colorAttributes,
  borderEndColor: colorAttributes,
  borderLeftColor: colorAttributes,
  borderRadius: true,
  borderRightColor: colorAttributes,
  borderStartColor: colorAttributes,
  borderStyle: true,
  borderTopColor: colorAttributes,
  borderTopEndRadius: true,
  borderTopLeftRadius: true,
  borderTopRightRadius: true,
  borderTopStartRadius: true,
  opacity: true,
  color: colorAttributes,
  fontFamily: true,
  fontSize: true,
  fontStyle: true,
  fontVariant: true,
  fontWeight: true,
  includeFontPadding: true,
  letterSpacing: true,
  lineHeight: true,
  textAlign: true,
  textAlignVertical: true,
  textDecorationColor: colorAttributes,
  textDecorationLine: true,
  textDecorationStyle: true,
  textShadowColor: colorAttributes,
  textShadowOffset: true,
  textShadowRadius: true,
  textTransform: true,
  writingDirection: true,
  overlayColor: colorAttributes,
  resizeMode: true,
  tintColor: colorAttributes
};
module.exports = ReactNativeStyleAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb2xvckF0dHJpYnV0ZXMiLCJwcm9jZXNzIiwicHJvY2Vzc0NvbG9yIiwiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJhbGlnbkNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiYWxpZ25TZWxmIiwiYXNwZWN0UmF0aW8iLCJib3JkZXJCb3R0b21XaWR0aCIsImJvcmRlckVuZFdpZHRoIiwiYm9yZGVyTGVmdFdpZHRoIiwiYm9yZGVyUmlnaHRXaWR0aCIsImJvcmRlclN0YXJ0V2lkdGgiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlcldpZHRoIiwiYm90dG9tIiwiZGlyZWN0aW9uIiwiZGlzcGxheSIsImVuZCIsImZsZXgiLCJmbGV4QmFzaXMiLCJmbGV4RGlyZWN0aW9uIiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwiZmxleFdyYXAiLCJoZWlnaHQiLCJqdXN0aWZ5Q29udGVudCIsImxlZnQiLCJtYXJnaW4iLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW5FbmQiLCJtYXJnaW5Ib3Jpem9udGFsIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luU3RhcnQiLCJtYXJnaW5Ub3AiLCJtYXJnaW5WZXJ0aWNhbCIsIm1heEhlaWdodCIsIm1heFdpZHRoIiwibWluSGVpZ2h0IiwibWluV2lkdGgiLCJvdmVyZmxvdyIsInBhZGRpbmciLCJwYWRkaW5nQm90dG9tIiwicGFkZGluZ0VuZCIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nU3RhcnQiLCJwYWRkaW5nVG9wIiwicGFkZGluZ1ZlcnRpY2FsIiwicG9zaXRpb24iLCJyaWdodCIsInN0YXJ0IiwidG9wIiwid2lkdGgiLCJ6SW5kZXgiLCJlbGV2YXRpb24iLCJzaGFkb3dDb2xvciIsInNoYWRvd09mZnNldCIsImRpZmYiLCJzaXplc0RpZmZlciIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJkZWNvbXBvc2VkTWF0cml4Iiwicm90YXRpb24iLCJzY2FsZVgiLCJzY2FsZVkiLCJ0cmFuc2Zvcm0iLCJwcm9jZXNzVHJhbnNmb3JtIiwidHJhbnNmb3JtTWF0cml4IiwidHJhbnNsYXRlWCIsInRyYW5zbGF0ZVkiLCJiYWNrZmFjZVZpc2liaWxpdHkiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJCb3R0b21Db2xvciIsImJvcmRlckJvdHRvbUVuZFJhZGl1cyIsImJvcmRlckJvdHRvbUxlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsImJvcmRlckJvdHRvbVN0YXJ0UmFkaXVzIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJFbmRDb2xvciIsImJvcmRlckxlZnRDb2xvciIsImJvcmRlclJhZGl1cyIsImJvcmRlclJpZ2h0Q29sb3IiLCJib3JkZXJTdGFydENvbG9yIiwiYm9yZGVyU3R5bGUiLCJib3JkZXJUb3BDb2xvciIsImJvcmRlclRvcEVuZFJhZGl1cyIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJUb3BSaWdodFJhZGl1cyIsImJvcmRlclRvcFN0YXJ0UmFkaXVzIiwib3BhY2l0eSIsImNvbG9yIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiZm9udFN0eWxlIiwiZm9udFZhcmlhbnQiLCJmb250V2VpZ2h0IiwiaW5jbHVkZUZvbnRQYWRkaW5nIiwibGV0dGVyU3BhY2luZyIsImxpbmVIZWlnaHQiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QWxpZ25WZXJ0aWNhbCIsInRleHREZWNvcmF0aW9uQ29sb3IiLCJ0ZXh0RGVjb3JhdGlvbkxpbmUiLCJ0ZXh0RGVjb3JhdGlvblN0eWxlIiwidGV4dFNoYWRvd0NvbG9yIiwidGV4dFNoYWRvd09mZnNldCIsInRleHRTaGFkb3dSYWRpdXMiLCJ0ZXh0VHJhbnNmb3JtIiwid3JpdGluZ0RpcmVjdGlvbiIsIm92ZXJsYXlDb2xvciIsInJlc2l6ZU1vZGUiLCJ0aW50Q29sb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXQgc3RyaWN0LWxvY2FsXG4gKiBAZmxvd1xuICovXG5cbmltcG9ydCB0eXBlIHtBbnlBdHRyaWJ1dGVUeXBlfSBmcm9tICcuLi8uLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCBwcm9jZXNzQ29sb3IgZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InO1xuaW1wb3J0IHByb2Nlc3NUcmFuc2Zvcm0gZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzVHJhbnNmb3JtJztcbmltcG9ydCBzaXplc0RpZmZlciBmcm9tICcuLi8uLi9VdGlsaXRpZXMvZGlmZmVyL3NpemVzRGlmZmVyJztcblxuY29uc3QgY29sb3JBdHRyaWJ1dGVzID0ge3Byb2Nlc3M6IHByb2Nlc3NDb2xvcn07XG5cbmNvbnN0IFJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzOiB7W3N0cmluZ106IEFueUF0dHJpYnV0ZVR5cGUsIC4uLn0gPSB7XG4gIC8qKlxuICAgKiBMYXlvdXRcbiAgICovXG4gIGFsaWduQ29udGVudDogdHJ1ZSxcbiAgYWxpZ25JdGVtczogdHJ1ZSxcbiAgYWxpZ25TZWxmOiB0cnVlLFxuICBhc3BlY3RSYXRpbzogdHJ1ZSxcbiAgYm9yZGVyQm90dG9tV2lkdGg6IHRydWUsXG4gIGJvcmRlckVuZFdpZHRoOiB0cnVlLFxuICBib3JkZXJMZWZ0V2lkdGg6IHRydWUsXG4gIGJvcmRlclJpZ2h0V2lkdGg6IHRydWUsXG4gIGJvcmRlclN0YXJ0V2lkdGg6IHRydWUsXG4gIGJvcmRlclRvcFdpZHRoOiB0cnVlLFxuICBib3JkZXJXaWR0aDogdHJ1ZSxcbiAgYm90dG9tOiB0cnVlLFxuICBkaXJlY3Rpb246IHRydWUsXG4gIGRpc3BsYXk6IHRydWUsXG4gIGVuZDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEJhc2lzOiB0cnVlLFxuICBmbGV4RGlyZWN0aW9uOiB0cnVlLFxuICBmbGV4R3JvdzogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleFdyYXA6IHRydWUsXG4gIGhlaWdodDogdHJ1ZSxcbiAganVzdGlmeUNvbnRlbnQ6IHRydWUsXG4gIGxlZnQ6IHRydWUsXG4gIG1hcmdpbjogdHJ1ZSxcbiAgbWFyZ2luQm90dG9tOiB0cnVlLFxuICBtYXJnaW5FbmQ6IHRydWUsXG4gIG1hcmdpbkhvcml6b250YWw6IHRydWUsXG4gIG1hcmdpbkxlZnQ6IHRydWUsXG4gIG1hcmdpblJpZ2h0OiB0cnVlLFxuICBtYXJnaW5TdGFydDogdHJ1ZSxcbiAgbWFyZ2luVG9wOiB0cnVlLFxuICBtYXJnaW5WZXJ0aWNhbDogdHJ1ZSxcbiAgbWF4SGVpZ2h0OiB0cnVlLFxuICBtYXhXaWR0aDogdHJ1ZSxcbiAgbWluSGVpZ2h0OiB0cnVlLFxuICBtaW5XaWR0aDogdHJ1ZSxcbiAgb3ZlcmZsb3c6IHRydWUsXG4gIHBhZGRpbmc6IHRydWUsXG4gIHBhZGRpbmdCb3R0b206IHRydWUsXG4gIHBhZGRpbmdFbmQ6IHRydWUsXG4gIHBhZGRpbmdIb3Jpem9udGFsOiB0cnVlLFxuICBwYWRkaW5nTGVmdDogdHJ1ZSxcbiAgcGFkZGluZ1JpZ2h0OiB0cnVlLFxuICBwYWRkaW5nU3RhcnQ6IHRydWUsXG4gIHBhZGRpbmdUb3A6IHRydWUsXG4gIHBhZGRpbmdWZXJ0aWNhbDogdHJ1ZSxcbiAgcG9zaXRpb246IHRydWUsXG4gIHJpZ2h0OiB0cnVlLFxuICBzdGFydDogdHJ1ZSxcbiAgdG9wOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuXG4gIC8qKlxuICAgKiBTaGFkb3dcbiAgICovXG4gIGVsZXZhdGlvbjogdHJ1ZSxcbiAgc2hhZG93Q29sb3I6IGNvbG9yQXR0cmlidXRlcyxcbiAgc2hhZG93T2Zmc2V0OiB7ZGlmZjogc2l6ZXNEaWZmZXJ9LFxuICBzaGFkb3dPcGFjaXR5OiB0cnVlLFxuICBzaGFkb3dSYWRpdXM6IHRydWUsXG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybVxuICAgKi9cbiAgZGVjb21wb3NlZE1hdHJpeDogdHJ1ZSwgLy8gQGRlcHJlY2F0ZWRcbiAgcm90YXRpb246IHRydWUsIC8vIEBkZXByZWNhdGVkXG4gIHNjYWxlWDogdHJ1ZSwgLy8gQGRlcHJlY2F0ZWRcbiAgc2NhbGVZOiB0cnVlLCAvLyBAZGVwcmVjYXRlZFxuICB0cmFuc2Zvcm06IHtwcm9jZXNzOiBwcm9jZXNzVHJhbnNmb3JtfSxcbiAgdHJhbnNmb3JtTWF0cml4OiB0cnVlLCAvLyBAZGVwcmVjYXRlZFxuICB0cmFuc2xhdGVYOiB0cnVlLCAvLyBAZGVwcmVjYXRlZFxuICB0cmFuc2xhdGVZOiB0cnVlLCAvLyBAZGVwcmVjYXRlZFxuXG4gIC8qKlxuICAgKiBWaWV3XG4gICAqL1xuICBiYWNrZmFjZVZpc2liaWxpdHk6IHRydWUsXG4gIGJhY2tncm91bmRDb2xvcjogY29sb3JBdHRyaWJ1dGVzLFxuICBib3JkZXJCb3R0b21Db2xvcjogY29sb3JBdHRyaWJ1dGVzLFxuICBib3JkZXJCb3R0b21FbmRSYWRpdXM6IHRydWUsXG4gIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IHRydWUsXG4gIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiB0cnVlLFxuICBib3JkZXJCb3R0b21TdGFydFJhZGl1czogdHJ1ZSxcbiAgYm9yZGVyQ29sb3I6IGNvbG9yQXR0cmlidXRlcyxcbiAgYm9yZGVyRW5kQ29sb3I6IGNvbG9yQXR0cmlidXRlcyxcbiAgYm9yZGVyTGVmdENvbG9yOiBjb2xvckF0dHJpYnV0ZXMsXG4gIGJvcmRlclJhZGl1czogdHJ1ZSxcbiAgYm9yZGVyUmlnaHRDb2xvcjogY29sb3JBdHRyaWJ1dGVzLFxuICBib3JkZXJTdGFydENvbG9yOiBjb2xvckF0dHJpYnV0ZXMsXG4gIGJvcmRlclN0eWxlOiB0cnVlLFxuICBib3JkZXJUb3BDb2xvcjogY29sb3JBdHRyaWJ1dGVzLFxuICBib3JkZXJUb3BFbmRSYWRpdXM6IHRydWUsXG4gIGJvcmRlclRvcExlZnRSYWRpdXM6IHRydWUsXG4gIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiB0cnVlLFxuICBib3JkZXJUb3BTdGFydFJhZGl1czogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcblxuICAvKipcbiAgICogVGV4dFxuICAgKi9cbiAgY29sb3I6IGNvbG9yQXR0cmlidXRlcyxcbiAgZm9udEZhbWlseTogdHJ1ZSxcbiAgZm9udFNpemU6IHRydWUsXG4gIGZvbnRTdHlsZTogdHJ1ZSxcbiAgZm9udFZhcmlhbnQ6IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGluY2x1ZGVGb250UGFkZGluZzogdHJ1ZSxcbiAgbGV0dGVyU3BhY2luZzogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgdGV4dEFsaWduOiB0cnVlLFxuICB0ZXh0QWxpZ25WZXJ0aWNhbDogdHJ1ZSxcbiAgdGV4dERlY29yYXRpb25Db2xvcjogY29sb3JBdHRyaWJ1dGVzLFxuICB0ZXh0RGVjb3JhdGlvbkxpbmU6IHRydWUsXG4gIHRleHREZWNvcmF0aW9uU3R5bGU6IHRydWUsXG4gIHRleHRTaGFkb3dDb2xvcjogY29sb3JBdHRyaWJ1dGVzLFxuICB0ZXh0U2hhZG93T2Zmc2V0OiB0cnVlLFxuICB0ZXh0U2hhZG93UmFkaXVzOiB0cnVlLFxuICB0ZXh0VHJhbnNmb3JtOiB0cnVlLFxuICB3cml0aW5nRGlyZWN0aW9uOiB0cnVlLFxuXG4gIC8qKlxuICAgKiBJbWFnZVxuICAgKi9cbiAgb3ZlcmxheUNvbG9yOiBjb2xvckF0dHJpYnV0ZXMsXG4gIHJlc2l6ZU1vZGU6IHRydWUsXG4gIHRpbnRDb2xvcjogY29sb3JBdHRyaWJ1dGVzLFxufTtcblxubW9kdWxlLmV4cG9y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